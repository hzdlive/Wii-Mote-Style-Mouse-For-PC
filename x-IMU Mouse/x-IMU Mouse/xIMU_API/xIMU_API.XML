<?xml version="1.0"?>
<doc>
    <assembly>
        <name>xIMU_API</name>
    </assembly>
    <members>
        <member name="T:xIMU_API.AsyncReadCompletedEventArgs">
            <summary>
            Asynchronous read completed event arguments class.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:xIMU_API.AsyncReadCompletedEventArgs.#ctor(xIMU_API.PacketCount,System.Exception,System.Boolean)" -->
        <member name="P:xIMU_API.AsyncReadCompletedEventArgs.PacketCounter">
            <summary>
            Gets <see cref="T:xIMU_API.PacketCount"/> data of read.
            </summary>
        </member>
        <member name="P:xIMU_API.AsyncReadCompletedEventArgs.Error">
            <summary>
            Gets error <see cref="T:System.Exception"/> if occured.
            </summary>
        </member>
        <member name="P:xIMU_API.AsyncReadCompletedEventArgs.Cancelled">
            <summary>
            Gets a value indicating whether the asynchronous scan was cancelled.
            </summary>
        </member>
        <member name="T:xIMU_API.CompatibleFirmwareVersions">
            <summary>
            Compatible firmware versions.  Only major number required.
            </summary>
        </member>
        <member name="T:xIMU_API.PacketHeaders">
            <summary>
            Packet headers.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks>
        </member>
        <member name="T:xIMU_API.ErrorCodes">
            <summary>
            Error codes.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.CommandCodes">
            <summary>
            Command codes.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.Qvals">
            <summary>
            Number of fractional bits used by fixed-point representations.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.RegisterAddresses">
            <summary>
            Register addresses.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.ButtonModes">
            <summary>
            Button mode register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.AccelerometerFullScales">
            <summary>
            Accelerometer full-scale register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.MagnetometerFullScales">
            <summary>
            Magnetometer full-scale register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.AlgorithmModes">
            <summary>
            Algorithm mode register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.SensorDataModes">
            <summary>
            Data mode register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.DateTimeOutputRates">
            <summary>
            Date/time data output rate register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.DataOutputRates">
            <summary>
            Data output rate register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.MotionTrigWakeUpModes">
            <summary>
            Motion triggered wake up mode register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.BluetoothPowerModes">
            <summary>
            Bluetooth power mode register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.auxiliaryPortModes">
            <summary>
            Auxiliary Port mode register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.DigitalIOdirections">
            <summary>
            Digital I/O direction register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.DigitalIOoutputRates">
            <summary>
            Digital I/O output rate register values.
            </summary>
            <remarks>
            A matching enumeration exists in firmware source.
            </remarks> 
        </member>
        <member name="T:xIMU_API.xIMUserial">
            <summary>
            x-IMU serial class.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUserial.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:xIMUserial"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUserial.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:xIMUserial"/> class.
            </summary>
            <param name="portName">
            Name of the port the x-IMU appears as (for example, COM1).
            </param>
        </member>
        <member name="M:xIMU_API.xIMUserial.Open">
            <summary>
            Opens a new serial port communication and resets statistics counters.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUserial.Close">
            <summary>
            Closes the port connection.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUserial.GetPortNames">
            <summary>
            Gets an array of serial port names for the current computer.  Invalid characters are removed.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUserial.SendCommandPacket(xIMU_API.CommandCodes)">
            <summary>
            Sends command packet.
            </summary>
            <param name="commandCode">
            Command data to be sent.
            </param> 
        </member>
        <member name="M:xIMU_API.xIMUserial.SendReadRegisterPacket(xIMU_API.RegisterData)">
            <summary>
            Sends read register packet.
            </summary>
            <param name="registerData">
            Register data containing register address.
            </param>
        </member>
        <member name="M:xIMU_API.xIMUserial.SendWriteRegisterPacket(xIMU_API.RegisterData)">
            <summary>
            Sends write register packet.
            </summary>
            <param name="registerData">
            Register data containing register address and value.
            </param>
        </member>
        <member name="M:xIMU_API.xIMUserial.SendReadDateTimePacket">
            <summary>
            Sends read date/time packet.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUserial.SendWriteDateTimePacket(xIMU_API.DateTimeData)">
            <summary>
            Sends write date/time packet.
            </summary>
            <param name="dateTimeData">
            Date/time data to be written.
            </param>
        </member>
        <member name="M:xIMU_API.xIMUserial.SendDigitalIOPacket(xIMU_API.DigitalIOdata)">
            <summary>
            Sends digital IO packet to set digital output states.
            </summary>
            <param name="digitalIOData">
            <see cref="!:DigitalIOData"/> instance containing output states to be set.
            </param>
        </member>
        <member name="M:xIMU_API.xIMUserial.SendByteArray(System.Byte[])">
            <summary>
            Sends byte array to serial port and increments the sent packets counter.
            </summary>
            <param name="byteArray">
            Byte array to be sent to serial port.
            </param>
        </member>
        <member name="M:xIMU_API.xIMUserial.serialPort_DataReceived(System.Object,System.IO.Ports.SerialDataReceivedEventArgs)">
            <summary>
            Data received event to decode packet and call associated data object received event.  Decoding exceptions handled and ignored.
            </summary>
        </member>
        <member name="P:xIMU_API.xIMUserial.PortName">
            <summary>
            Gets or sets the name of the serial port.
            </summary>
        </member>
        <member name="P:xIMU_API.xIMUserial.IsOpen">
            <summary>
            Gets a value indicated the open or closed value of the serial port.
            </summary>
        </member>
        <member name="P:xIMU_API.xIMUserial.PacketCounter">
            <summary>
            Gets the packet count data object.
            </summary>
        </member>
        <member name="T:xIMU_API.FixedFloat">
            <summary>
            16-bit fixed-point / floating-point conversion class.
            </summary>
        </member>
        <member name="M:xIMU_API.FixedFloat.FixedToFloat(System.Int16,xIMU_API.Qvals)">
            <summary>
            Returns floating-point value from specified 16-bit fixed-point.
            </summary>
            <param name="fixedValue">
            16-bit fixed-point value.
            </param>
            <param name="q">
            Number of fraction bits. See <see cref="T:xIMU_API.Qvals"/>.
            </param>
            <returns>
            Floating-point number.
            </returns>
        </member>
        <member name="M:xIMU_API.FixedFloat.FloatToFixed(System.Single,xIMU_API.Qvals)">
            <summary>
            Returns 16-bit fixed-point value from specified floating-point value with saturation.
            </summary>
            <param name="floatValue">
            Floating-point representation of 16-bit fixed-point value.
            </param>
            <param name="q">
            Number of fraction bits. See <see cref="T:xIMU_API.Qvals"/>.
            </param>
            <returns>
            16-bit fixed-point value.
            </returns>
        </member>
        <member name="T:xIMU_API.CalInertialMagData">
            <summary>
            Calibrated gyroscope, accelerometer and magnetometer data class.
            </summary>
        </member>
        <member name="T:xIMU_API.xIMUdata">
            <summary>
            x-IMU data class.  Base class cannot be instantiated.
            </summary>
        </member>
        <member name="M:xIMU_API.CalInertialMagData.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.CalInertialMagData"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.CalInertialMagData.#ctor(System.Single[],System.Single[],System.Single[])">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.CalInertialMagData"/> class.
            </summary>
            <param name="gyroscope">
            Calibrated gyroscope data in degrees per second.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </param>
            <param name="accelerometer">
            Calibrated accelerometer data in 'g'.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </param>  
            <param name="magnetometer">
            Calibrated magnetometer data in Gauss.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </param>  
        </member>
        <member name="M:xIMU_API.CalInertialMagData.ConvertToCSV">
            <summary>
            Converts data to string of Comma Separated Variables.
            </summary>
        </member>
        <member name="P:xIMU_API.CalInertialMagData.Gyroscope">
            <summary>
            Gets or sets the calibrated gyroscope data in degrees per second.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </summary>
        </member>
        <member name="P:xIMU_API.CalInertialMagData.Accelerometer">
            <summary>
            Gets or sets the calibrated accelerometer data in 'g'.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </summary>
        </member>
        <member name="P:xIMU_API.CalInertialMagData.Magnetometer">
            <summary>
            Gets or sets the calibrated magnetometer data in Gauss.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </summary>
        </member>
        <member name="T:xIMU_API.PacketEncoding">
            <summary>
            Packet encoding class.  Contains static methods for packet encoding and decoding.
            </summary>
        </member>
        <member name="M:xIMU_API.PacketEncoding.EncodePacket(System.Byte[])">
            <summary>
            Encodes packet with consecutive right shifts so that the msb of each encoded byte is clear. The msb of the final byte is set to indicate the end of the packet.
            </summary>
            <param name="decodedPacket">
            The decoded packet contents to be encoded.
            </param>
            <returns>
            The encoded packet.
            </returns> 
        </member>
        <member name="M:xIMU_API.PacketEncoding.RightShiftByteArray(System.Byte[])">
            <summary>
            Right shifts a byte array by 1 bit.  The lsb of byte x becomes the msb of byte x+1.
            </summary>
            <param name="byteArray">
            The byte array to be right shifted.
            </param>
            <returns>
            The right shifted byte array.
            </returns> 
        </member>
        <member name="M:xIMU_API.PacketEncoding.DecodePacket(System.Byte[])">
            <summary>
            Decodes a packet with consecutive left shifts so that the msb of each encoded byte is removed.
            </summary>
            <param name="encodedPacket">
            The endcoded packet to be decoded.
            </param>
            <returns>
            The decoded packet.
            </returns> 
        </member>
        <member name="M:xIMU_API.PacketEncoding.LeftShiftByteArray(System.Byte[])">
            <summary>
            Left shifts a byte array by 1 bit.  The msb of byte x becomes the lsb of byte x-1.
            </summary>
            <param name="byteArray">
            The byte array to be left shifted.
            </param>
            <returns>
            The left shifted byte array.
            </returns> 
        </member>
        <member name="T:xIMU_API.ErrorData">
            <summary>
            Error data class.
            </summary>
        </member>
        <member name="M:xIMU_API.ErrorData.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.ErrorData"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.ErrorData.#ctor(xIMU_API.ErrorCodes)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.ErrorData"/> class.
            </summary>
            <param name="errorCode">
            Error code. See <see cref="T:xIMU_API.ErrorCodes"/>.
            </param>
        </member>
        <member name="M:xIMU_API.ErrorData.#ctor(System.UInt16)">
            <summary>
            Initialises a new instance of the ErrorData class.
            </summary>
            <param name="errorCode">
            Error code. Must be defined in <see cref="T:xIMU_API.ErrorCodes"/>.
            </param>
        </member>
        <member name="M:xIMU_API.ErrorData.GetMessage">
            <summary>
            Message associated with error code.
            </summary>
        </member>
        <member name="P:xIMU_API.ErrorData.ErrorCode">
            <summary>
            Gets or sets the error code. Must be defined in <see cref="T:xIMU_API.ErrorCodes"/>.
            </summary>
            <exception cref="T:System.Exception">
            Thrown if invalid error code specifed.
            </exception>
        </member>
        <member name="T:xIMU_API.PortAssignment">
            <summary>
            Port asignment class.
            </summary>
        </member>
        <member name="M:xIMU_API.PortAssignment.#ctor(System.String,System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.PortAssignment"/> class.
            </summary>
            <param name="portName">
            Port name assigned the x-IMU.
            </param>
            <param name="deviceID">
            Device ID of x-IMU.
            </param>
        </member>
        <member name="P:xIMU_API.PortAssignment.PortName">
            <summary>
            Gets the port name assigned the x-IMU.
            </summary>
        </member>
        <member name="P:xIMU_API.PortAssignment.DeviceID">
            <summary>
            Gets the device ID of x-IMU.
            </summary>
        </member>
        <member name="T:xIMU_API.QuaternionData">
            <summary>
            Quaternion data class.
            </summary>
            <remarks>
            See http://www.x-io.co.uk/res/doc/quaternions.pdf for more information on quaternions.
            </remarks>
        </member>
        <member name="M:xIMU_API.QuaternionData.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.QuaternionData"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.QuaternionData.#ctor(System.Single[])">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.QuaternionData"/> class.
            </summary>
            <param name="quaternion">
            Quaternion. Must of 4 elements. Each element must be of value -1 to +1.
            </param>
        </member>
        <member name="M:xIMU_API.QuaternionData.Rad2Deg(System.Single)">
            <summary>
            Converts from radians to degrees.
            </summary>
            <param name="radians">
            Angular quantity in radians.
            </param> 
            <returns>
            Angular quantity in degrees.
            </returns>
        </member>
        <member name="M:xIMU_API.QuaternionData.ConvertToConjugate">
            <summary>
            Returns the quaternion conjugate.
            </summary>
            <returns>
            Quaternion conjugate.
            </returns>
        </member>
        <member name="M:xIMU_API.QuaternionData.ConvertToRotationMatrix">
            <summary>
            Converts data to rotation matrix.
            </summary>
            <remarks>
            Elements 0 to 2 represent columns 1 to 3 of row 1.
            Elements 3 to 5 represent columns 1 to 3 of row 2.
            Elements 6 to 8 represent columns 1 to 3 of row 3.
            </remarks>
        </member>
        <member name="M:xIMU_API.QuaternionData.ConvertToEulerAngles">
            <summary>
            Converts data to XYZ Euler angles (in degrees).
            </summary>
        </member>
        <member name="M:xIMU_API.QuaternionData.ConvertToCSV">
            <summary>
            Converts data to string of Comma Separated Variables.
            </summary>
        </member>
        <member name="M:xIMU_API.QuaternionData.ConvertToRotationMatrixCSV">
            <summary>
            Converts data to string of Comma Separated Variables representaing the elements of a rotation matrix.
            </summary>
            <remarks>
            First to third values represent columns 1 to 3 of row 1.
            Forth to fifth values represent columns 1 to 3 of row 2.
            Sixth to eighth values represent columns 1 to 3 of row 3.
            </remarks>
        </member>
        <member name="M:xIMU_API.QuaternionData.ConvertToEulerAnglesCSV">
            <summary>
            Converts data to string of Comma Separated Variables representaing the XYZ Euler angles (in degrees).
            </summary>
        </member>
        <member name="P:xIMU_API.QuaternionData.Quaternion">
            <summary>
            Gets or sets the quaternion. Must of 4 elements. Vector will be normalised.
            </summary>
            <exception cref="T:System.Exception">
            Thrown if invalid quaternion specified.
            </exception>
        </member>
        <member name="T:xIMU_API.RegisterData">
            <summary>
            Register data class.
            </summary>
        </member>
        <member name="M:xIMU_API.RegisterData.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.RegisterData"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.RegisterData.#ctor(System.UInt16)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.RegisterData"/> class.
            </summary>
            <param name="address">
            16-bit register address. Must be defined in <see cref="T:xIMU_API.RegisterAddresses"/>.
            </param>
        </member>
        <member name="M:xIMU_API.RegisterData.#ctor(xIMU_API.RegisterAddresses)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.RegisterData"/> class.
            </summary>
            <param name="registerAddress">
            Register address. See <see cref="T:xIMU_API.RegisterAddresses"/>.
            </param>
        </member>
        <member name="M:xIMU_API.RegisterData.#ctor(System.UInt16,System.Single)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.RegisterData"/> class.
            </summary>
            <param name="address">
            16-bit register address. Must be defined in <see cref="T:xIMU_API.RegisterAddresses"/>.
            </param>
            <param name="floatValue">
            Floating-point representation of 16-bit fixed-point value.
            </param>
        </member>
        <member name="M:xIMU_API.RegisterData.#ctor(xIMU_API.RegisterAddresses,System.Single)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.RegisterData"/> class.
            </summary>
            <param name="registerAddress">
            Register address. See <see cref="T:xIMU_API.RegisterAddresses"/>.
            </param>
            <param name="floatValue">
            Floating-point representation of 16-bit fixed-point value.
            </param>
        </member>
        <member name="M:xIMU_API.RegisterData.#ctor(System.UInt16,System.UInt16)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.RegisterData"/> class.
            </summary>
            <param name="address">
            16-bit register address. Must be defined in <see cref="T:xIMU_API.RegisterAddresses"/>.
            </param>
            <param name="value">
            16-bit register value.
            </param>
        </member>
        <member name="M:xIMU_API.RegisterData.LookupQval">
            <summary>
            Returns <see cref="T:xIMU_API.Qvals"/> associated with register address.
            </summary>
            <returns>
            <see cref="T:xIMU_API.Qvals"/> associated with register address.
            </returns>
        </member>
        <member name="M:xIMU_API.RegisterData.LookupQval(System.UInt16)">
            <summary>
            Returns <see cref="T:xIMU_API.Qvals"/> associated with specified register address.
            </summary>
            <param name="address">
            Register address.
            </param>
            <returns>
            <see cref="T:xIMU_API.Qvals"/> associated with register address.
            </returns>
            <exception cref="T:System.Exception">
            Thrown if register address does not have associated <see cref="T:xIMU_API.Qvals"/>.
            </exception>
        </member>
        <member name="P:xIMU_API.RegisterData.Address">
            <summary>
            Gets or sets the 16-bit register address.  Must be defined in <see cref="T:xIMU_API.RegisterAddresses"/>.
            </summary>
        </member>
        <member name="P:xIMU_API.RegisterData.Value">
            <summary>
            Gets or sets the 16-bit register value.
            </summary>
        </member>
        <member name="P:xIMU_API.RegisterData.floatValue">
            <summary>
            Gets or sets the floating-point representation of 16-bit register value when interpreted as fixed-point.
            </summary>
        </member>
        <member name="T:xIMU_API.RawBattThermData">
            <summary>
            Raw battery voltage thermometer data class.
            </summary>
        </member>
        <member name="M:xIMU_API.RawBattThermData.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.RawBattThermData"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.RawBattThermData.#ctor(System.Int16,System.Int16)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.RawBattThermData"/> class.
            </summary>
            <param name="batteryVoltage">
            Raw battery voltage ADC data in LSBs.
            </param>
            <param name="thermometer">
            Raw Thermometer ADC data in LSBs.
            </param>        
        </member>
        <member name="M:xIMU_API.RawBattThermData.ConvertToCSV">
            <summary>
            Converts data to string of Comma Separated Variables.
            </summary>
        </member>
        <member name="P:xIMU_API.RawBattThermData.BatteryVoltage">
            <summary>
            Gets or sets the raw battery voltage ADC data in LSBs.
            </summary>
        </member>
        <member name="P:xIMU_API.RawBattThermData.Thermometer">
            <summary>
            Gets or sets the raw Thermometer ADC data in LSBs.
            </summary>
        </member>
        <member name="T:xIMU_API.DigitalIOdata">
            <summary>
            Digital I/O data class.
            </summary>
        </member>
        <member name="M:xIMU_API.DigitalIOdata.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.DigitalIOdata"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.DigitalIOdata.#ctor(xIMU_API.DigitalPortBits)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.DigitalIOdata"/> class.
            </summary>
            <param name="state">
            State of the digital I/O port.  true (1) = logic high, false (0) = logic low.
            </param>
        </member>
        <member name="M:xIMU_API.DigitalIOdata.#ctor(xIMU_API.DigitalPortBits,xIMU_API.DigitalPortBits)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.DigitalIOdata"/> class.
            </summary>     
            <param name="direction">
            Direction of the digital I/O port.  true (1) = input, false (0) = output.
            </param>
            <param name="state">
            State of the digital I/O port.  true (1) = logic high, false (0) = logic low.
            </param>
        </member>
        <member name="M:xIMU_API.DigitalIOdata.ConvertToCSV">
            <summary>
            Converts data to string of Comma Separated Variables.
            </summary>
        </member>
        <member name="P:xIMU_API.DigitalIOdata.Direction">
            <summary>
            Gets or sets direction of the digital I/O port.  true (1) = input, false (0) = output.
            </summary>
        </member>
        <member name="P:xIMU_API.DigitalIOdata.State">
            <summary>
            Gets or sets state of the digital I/O port.  true (1) = logic high, false (0) = logic low.
            </summary>
        </member>
        <member name="T:xIMU_API.CSVfileWriter">
            <summary>
            CSV files class.
            </summary>
        </member>
        <member name="F:xIMU_API.CSVfileWriter.packetNumber">
            <summary>
            Packet number.
            </summary>
        </member>
        <member name="F:xIMU_API.CSVfileWriter.writesEnabled">
            <summary>
            Writes enabled flag.
            </summary>
        </member>
        <member name="F:xIMU_API.CSVfileWriter.privFileBasePath">
            <summary>
            File base path.
            </summary>
        </member>
        <member name="F:xIMU_API.CSVfileWriter.streamWriters">
            <summary>
            Array of StreamWriter.
            </summary>
        </member>
        <member name="F:xIMU_API.CSVfileWriter.CSVheadings">
            <summary>
            CSV column headings for each file type.
            </summary>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CSVfileWriter"/> class.
            </summary>
            <param name="fileBasePath">
            Base path of file.  File name automatically extended with appropriate identifier and file extension.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.WriteData(xIMU_API.xIMUdata)">
            <summary>
            Write xIMUdata object to appropriate CSV file.  Will create new file if required.
            </summary>
            <param name="xIMUdataObject">
            x-IMU data object.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.WriteErrorData(xIMU_API.ErrorData)">
            <summary>
            Write error message to CSV file.  Will create new file if required.
            </summary>
            <param name="errorData">
            x-IMU error data.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.WriteCommandData(xIMU_API.CommandData)">
            <summary>
            Write command message to CSV file.  Will create new file if required.
            </summary>
            <param name="commandData">
            x-IMU command data.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.WriteRegisterData(xIMU_API.RegisterData)">
            <summary>
            Write register data to CSV file.  Will create new file if required.
            </summary>
            <param name="registerData">
            x-IMU register data.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.WriteDateTimeData(xIMU_API.DateTimeData)">
            <summary>
            Write date/time data to CSV file.  Will create new file if required.
            </summary>
            <param name="dateTimeData">
            x-IMU data/time data.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.WriteRawBattThermData(xIMU_API.RawBattThermData)">
            <summary>
            Writes raw battery and thermometer data to CSV file.  Will create new file if required.
            </summary>
            <param name="rawBattThermData">
            x-IMU raw battery and thermometer data.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.WriteCalBattThermData(xIMU_API.CalBattThermData)">
            <summary>
            Writes calibrated battery and thermometer data to CSV file.  Will create new file if required.
            </summary>
            <param name="calBattThermData">
            x-IMU calibrated battery and thermometer data.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.WriteRawInertialMagData(xIMU_API.RawInertialMagData)">
            <summary>
            Writes raw inertial/magnetic data to CSV file.  Will create new file if required.
            </summary>
            <param name="rawInertialMagData">
            x-IMU raw inertial/magnetic data.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.WriteCalInertialMagData(xIMU_API.CalInertialMagData)">
            <summary>
            Writes calibrated inertial/magnetic data to CSV file.  Will create new file if required.
            </summary>
            <param name="calInertialMagData">
            x-IMU calibrated inertial/magnetic data.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.WriteQuaternionData(xIMU_API.QuaternionData)">
            <summary>
            Writes quaternion data to quaternion, rotation matrix and Euler angles CSV files.  Will create new files if required.
            </summary>
            <param name="quaternionData">
            x-IMU quaternion data.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.WriteDigitalIOdata(xIMU_API.DigitalIOdata)">
            <summary>
            Writes digital I/O data to CSV file.  Will create new file if required.
            </summary>
            <param name="digitalIOdata">
            x-IMU digital I/O data.
            </param>
        </member>
        <member name="M:xIMU_API.CSVfileWriter.CloseFiles">
            <summary>
            Closes all open CSV files and returns file names of files created.
            </summary>
            <returns>
            File names of files created.
            </returns>
        </member>
        <member name="P:xIMU_API.CSVfileWriter.FileBasePath">
            <summary>
            Gets the file base path. This name is automatically extended to create the name of each CSV file.
            </summary>
        </member>
        <member name="T:xIMU_API.CSVfileWriter.FileIndexes">
            <summary>
            Index of each file within array.  Each label is used as part of file name.
            </summary>
        </member>
        <member name="T:xIMU_API.AsyncScanProgressChangedEventArgs">
            <summary>
            Scan process changed event arguments class.
            </summary>
        </member>
        <member name="M:xIMU_API.AsyncScanProgressChangedEventArgs.#ctor(System.Int32,System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.AsyncScanProgressChangedEventArgs"/> class.
            </summary>
            <param name="progressPercentage">
            Progress percentage.
            </param>
            <param name="progressMessage">
            Progress message.
            </param>
        </member>
        <member name="P:xIMU_API.AsyncScanProgressChangedEventArgs.ProgressPercentage">
            <summary>
            Gets the progress percentage.
            </summary>
        </member>
        <member name="P:xIMU_API.AsyncScanProgressChangedEventArgs.ProgressMessage">
            <summary>
            Gets the progress message.
            </summary>
        </member>
        <member name="T:xIMU_API.PacketConstruction">
            <summary>
            Packet construction class. Contains static methods for packet construction and deconstruction.
            </summary>
        </member>
        <member name="M:xIMU_API.PacketConstruction.ConstructCommandPacket(xIMU_API.CommandCodes)">
            <summary>
            Constructs an encoded command packet.
            </summary>
            <param name="commandCode">
            Command code. See <see cref="T:xIMU_API.CommandCodes"/>.
            </param> 
            <returns>
            Constructed and encoded command packet.
            </returns> 
        </member>
        <member name="M:xIMU_API.PacketConstruction.ConstructReadRegisterPacket(xIMU_API.RegisterData)">
            <summary>
            Constructs a read register packet.
            </summary>
            <param name="registerData">
            <see cref="T:xIMU_API.RegisterData"/> instance containing register address to be read.
            </param>
            <returns>
            Constructed and encoded read register packet
            </returns> 
        </member>
        <member name="M:xIMU_API.PacketConstruction.ConstructWriteRegisterPacket(xIMU_API.RegisterData)">
            <summary>
            Constructs a write register packet.
            </summary>
            <param name="registerData">
            <see cref="T:xIMU_API.RegisterData"/> instance containing register address and value to be written.
            </param>
            <returns>
            Constructed and encoded write register packet
            </returns> 
        </member>
        <member name="M:xIMU_API.PacketConstruction.ConstructReadDateTimePacket">
            <summary>
            Constructs a read date/time packet.
            </summary>
            <returns>
            Constructed and encoded read date/time packet
            </returns> 
        </member>
        <member name="M:xIMU_API.PacketConstruction.ConstructWriteDateTimePacket(xIMU_API.DateTimeData)">
            <summary>
            Constructs a write date/time packet.
            </summary>
            <param name="dateTimeData">
            <see cref="T:xIMU_API.DateTimeData"/> instance containing data to be written.
            </param>
            <returns>
            Constructed and encoded write date/time packet
            </returns> 
        </member>
        <member name="M:xIMU_API.PacketConstruction.ConstructDigitalIOPacket(xIMU_API.DigitalIOdata)">
            <summary>
            Constructs an encoded digital I/O packet.
            </summary>
            <param name="digitalIOData">
            <see cref="!:DigitalIOData"/> instance containing output states to be set.
            </param> 
            <returns>
            Constructed and encoded digital I/O packet.
            </returns> 
        </member>
        <member name="M:xIMU_API.PacketConstruction.InsertChecksum(System.Byte[])">
            <summary>
            Inserts check sum at last position in array equal to the sum all of bytes preceding it.
            </summary>
            <param name="decodedPacket">
            Decoded packet byte array.
            </param>
            <returns>
            Decoded packet with checksum inserted at last position in array.
            </returns> 
        </member>
        <member name="M:xIMU_API.PacketConstruction.DeconstructPacket(System.Byte[])">
            <summary>
            Deconstructs packet from and encoded byte array and return data object.
            </summary>
            <param name="encodedPacket">
            Byte array containing the encoded packet.
            </param>
            <returns>
            <see cref="T:xIMU_API.xIMUdata"/> object deconstructed from packet.
            </returns>  
            <exception cref="T:System.Exception">
            Thrown when deconstruction of an invalid packet is attempted.
            </exception>
        </member>
        <member name="M:xIMU_API.PacketConstruction.Combine(System.Byte,System.Byte)">
            <summary>
            Combines a most significant and least significant byte to return a short.
            </summary>
            <param name="MSB">
            Most significant byte.
            </param>
            <param name="LSB">
            Least significant byte.
            </param> 
            <returns>
            MSB and LSB combined to create a short.
            </returns>
        </member>
        <member name="T:xIMU_API.DateTimeData">
            <summary>
            Date/Time data class.
            </summary>
        </member>
        <member name="M:xIMU_API.DateTimeData.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.DateTimeData"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.DateTimeData.#ctor(System.DateTime)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.DateTimeData"/> class.
            </summary>
            <param name="dateTime">
            <see cref="T:System.DateTime"/> object.
            </param>
        </member>
        <member name="M:xIMU_API.DateTimeData.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.DateTimeData"/> class.
            </summary>
            <param name="year">
            Year. Must be of value 2000 2099.
            </param>
            <param name="month">
            Month. Must be of value 1 to 12.
            </param>
            <param name="date">
            Date. Must be of value 1 to 31.
            </param>
            <param name="hours">
            Hours. Must be of value 0 to 23.
            </param>
            <param name="minutes">
            Minutes. Must be of value 0 to 59.
            </param>
            <param name="seconds">
            Seconds. Must be of value 0 to 59.
            </param>
        </member>
        <member name="M:xIMU_API.DateTimeData.ConvertToString">
            <summary>
            Converts date/time data to string.
            </summary>
            <returns>
            Date/time data as string.
            </returns>
        </member>
        <member name="P:xIMU_API.DateTimeData.Year">
            <summary>
            Gets or sets the year. Must be of value 2000 2099.
            </summary>
            <exception cref="T:System.Exception">
            Thrown if invalid year specified.
            </exception>
        </member>
        <member name="P:xIMU_API.DateTimeData.Month">
            <summary>
            Gets or sets the month. Must be of value 1 to 12.
            </summary>
            <exception cref="T:System.Exception">
            Thrown if invalid month specified.
            </exception>
        </member>
        <member name="P:xIMU_API.DateTimeData.Date">
            <summary>
            Gets or sets the date. Must be of value 1 to 31.
            </summary>
            <exception cref="T:System.Exception">
            Thrown if invalid date specified.
            </exception>
        </member>
        <member name="P:xIMU_API.DateTimeData.Hours">
            <summary>
            Gets or sets the hours. Must be of value 0 to 23.
            </summary>
            <exception cref="T:System.Exception">
            Thrown if invalid hours specified.
            </exception>
        </member>
        <member name="P:xIMU_API.DateTimeData.Minutes">
            <summary>
            Gets or sets the minutes. Must be of value 0 to 59.
            </summary>
            <exception cref="T:System.Exception">
            Thrown if invalid minutes specified.
            </exception>
        </member>
        <member name="P:xIMU_API.DateTimeData.Seconds">
            <summary>
            Gets or sets the seconds. Must be of value 0 to 59.
            </summary>
            <exception cref="T:System.Exception">
            Thrown if invalid seconds specified.
            </exception>
        </member>
        <member name="P:xIMU_API.DateTimeData.DateTimeObject">
            <summary>
            Gets or sets a <see cref="T:System.DateTime"/> object representation of data.
            </summary>
        </member>
        <member name="T:xIMU_API.xIMUfile">
            <summary>
            x-IMU file class.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUfile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:xIMUfile"/> class. Opens or creates file.
            </summary>
            <param name="filePath">
            Path of file.
            </param>
        </member>
        <member name="M:xIMU_API.xIMUfile.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:xIMUfile"/> class.
            </summary>
            <param name="filePath">
            Path of file.
            </param>
            <param name="overwrite">
            Enable overwrite. true = create or overwrite file, false = create or open file.
            </param>
        </member>
        <member name="M:xIMU_API.xIMUfile.Close">
            <summary>
            Closes the file.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUfile.WriteWriteRegisterPacket(xIMU_API.RegisterData)">
            <summary>
            Writes write register packet.
            </summary>
            <param name="registerData">
            Register data containing register address and value.
            </param>
        </member>
        <member name="M:xIMU_API.xIMUfile.WriteByteArray(System.Byte[])">
            <summary>
            Writes byte array to serial port and increments the sent packets counter.
            </summary>
            <param name="byteArray">
            Byte array to be sent to serial port.
            </param>
        </member>
        <member name="M:xIMU_API.xIMUfile.Read">
            <summary>
            Reads file. Interpreted packets are provided in individual events.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUfile.RunAnsycRead">
            <summary>
            Run asynchronous read. Interpreted packets are provided in individual events.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUfile.CancelAnsycRead">
            <summary>
            Requests cancelation of pending read process.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUfile.backgroundWorker_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            BackgroundWorker DoWork event to run DoRead as new process.
            </summary>
        </member>
        <member name="M:xIMU_API.xIMUfile.DoRead(System.Boolean)">
            <summary>
            Reads file. Interpreted packets are provided in individual events.
            </summary>
            <param name="isAsync">
            Enables OnAsyncReadProgressChanged event for use when called within background worker.
            </param>
        </member>
        <member name="P:xIMU_API.xIMUfile.FilePath">
            <summary>
            Gets the file path.
            </summary>
        </member>
        <member name="P:xIMU_API.xIMUfile.PacketCounter">
            <summary>
            Gets the packet count data object.
            </summary>
        </member>
        <member name="T:xIMU_API.AsyncScanCompletedEventArgs">
            <summary>
            Run scan completed event arguments class.
            </summary>
        </member>
        <member name="M:xIMU_API.AsyncScanCompletedEventArgs.#ctor(xIMU_API.PortAssignment[],System.Boolean)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.AsyncScanCompletedEventArgs"/> class.
            </summary>
            <param name="portAssignments">
            Array of <see cref="!:portAssignments"/> found during the scan.
            </param>
            <param name="cancelled">
            Value indicating whether the asynchronous scan was cancelled.
            </param>
        </member>
        <member name="P:xIMU_API.AsyncScanCompletedEventArgs.PortAssignments">
            <summary>
            Gets an array of <see cref="P:xIMU_API.AsyncScanCompletedEventArgs.PortAssignments"/> found during the scan.
            </summary>
        </member>
        <member name="P:xIMU_API.AsyncScanCompletedEventArgs.Cancelled">
            <summary>
            Gets a value indicating whether the asynchronous scan was cancelled.
            </summary>
        </member>
        <member name="T:xIMU_API.PortScanner">
            <summary>
            Port scanner class.
            </summary>
        </member>
        <member name="M:xIMU_API.PortScanner.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.PortScanner"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.PortScanner.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.PortScanner"/> class.
            </summary>
            <param name="firstResultOnly">
            Value that controls whether the scan will end on finding the first x-IMU.
            </param>
            <param name="dontGiveUp">
            Value that controls whether the scan will continue indefinitely until at least one x-IMU has been found.
            </param>
        </member>
        <member name="M:xIMU_API.PortScanner.Scan">
            <summary>
            Scans ports for x-IMUs.
            </summary>
            <returns>
            Array of <see cref="!:PortAssignments"/> found during the scan.
            </returns>
        </member>
        <member name="M:xIMU_API.PortScanner.RunAsynsScan">
            <summary>
            Runs asynchronous scans ports for x-IMUs.  Progress and results provided in OnAsyncScanProgressChanged and OnAsyncScanCompleted events.
            </summary>
        </member>
        <member name="M:xIMU_API.PortScanner.CancelAnsycScan">
            <summary>
            Requests cancelation of pending background port scan process.
            </summary>
        </member>
        <member name="M:xIMU_API.PortScanner.backgroundWorker_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            BackgroundWorker DoWork event to run DoScan as new process.
            </summary>
        </member>
        <member name="M:xIMU_API.PortScanner.DoScan(System.Boolean)">
            <summary>
            Scans ports for x-IMUs.
            </summary>
            <param name="isAsync">
            Enables OnAsyncScanProgressChanged event for use when called within background worker.
            </param>
            <returns>
            Array of <see cref="!:PortAssignments"/> found during the scan.
            </returns>
        </member>
        <member name="M:xIMU_API.PortScanner.xIMUserialobj_RegisterDataReceived(System.Object,xIMU_API.RegisterData)">
            <summary>
            Register data received event to read x-IMU device ID.
            </summary>
        </member>
        <member name="P:xIMU_API.PortScanner.FirstResultOnly">
            <summary>
            Gets or sets a value that controls whether the scan will end on finding the first x-IMU.
            </summary>
        </member>
        <member name="P:xIMU_API.PortScanner.DontGiveUp">
            <summary>
            Gets or sets a value that controls whether the scan will continue indefinitely until at least one x-IMU has been found.
            </summary>
        </member>
        <member name="P:xIMU_API.PortScanner.CancellationPending">
            <summary>
            Gets a value indicating whether the application has requested cancelation of asynchronous port scan process.
            </summary>
        </member>
        <member name="P:xIMU_API.PortScanner.IsBusy">
            <summary>
            Gets a value indicating whether the <see cref="T:xIMU_API.PortScanner"/> is running an asynchronous scan.
            </summary>
        </member>
        <member name="T:xIMU_API.DigitalPortBits">
            <summary>
            Port data class.
            </summary>
        </member>
        <member name="M:xIMU_API.DigitalPortBits.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:xIMU_API.DigitalPortBits"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.DigitalPortBits.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:xIMU_API.DigitalPortBits"/> class.
            </summary>
            <param name="portByte">
            8-bit port value.  lsb = AX0, msb = AX7.
            </param>
        </member>
        <member name="M:xIMU_API.DigitalPortBits.#ctor(System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:xIMU_API.DigitalPortBits"/> class.
            </summary>
            <param name="portBits">
            8-bit port value.  bits[0] = AX0 (lsb), bits[7] = AX7 (msb).
            </param>
        </member>
        <member name="P:xIMU_API.DigitalPortBits.AX0">
            <summary>
            Gets or sets channel AX0.  lsb of 8-bit port.
            </summary>
        </member>
        <member name="P:xIMU_API.DigitalPortBits.AX1">
            <summary>
            Gets or sets channel AX1.  2nd lsb of 8-bit port.
            </summary>
        </member>
        <member name="P:xIMU_API.DigitalPortBits.AX2">
            <summary>
            Gets or sets channel AX2.  3rd lsb of 8-bit port.
            </summary>
        </member>
        <member name="P:xIMU_API.DigitalPortBits.AX3">
            <summary>
            Gets or sets channel AX3.  4th lsb of 8-bit port.
            </summary>
        </member>
        <member name="P:xIMU_API.DigitalPortBits.AX4">
            <summary>
            Gets or sets channel AX4.  5th lsb of 8-bit port.
            </summary>
        </member>
        <member name="P:xIMU_API.DigitalPortBits.AX5">
            <summary>
            Gets or sets channel AX5.  6th lsb of 8-bit port.
            </summary>
        </member>
        <member name="P:xIMU_API.DigitalPortBits.AX6">
            <summary>
            Gets or sets channel AX6.  7th lsb of 8-bit port.
            </summary>
        </member>
        <member name="P:xIMU_API.DigitalPortBits.AX7">
            <summary>
            Gets or sets channel AX7.  msb of 8-bit port.
            </summary>
        </member>
        <member name="P:xIMU_API.DigitalPortBits.PortBits">
            <summary>
            Gets or sets 8-bit port value.  bits[0] = AX0 (lsb), bits[7] = AX7 (msb).
            </summary>
        </member>
        <member name="P:xIMU_API.DigitalPortBits.PortByte">
            <summary>
            Gets or sets 8-bit port value.  lsb = AX0, msb = AX7.
            </summary>
        </member>
        <member name="T:xIMU_API.CalBattThermData">
            <summary>
            Calibrated battery voltage thermometer data class.
            </summary>
        </member>
        <member name="M:xIMU_API.CalBattThermData.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.CalBattThermData"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.CalBattThermData.#ctor(System.Single,System.Single)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.CalBattThermData"/> class.
            </summary>
            <param name="batteryVoltage">
            Calibrated battery voltage data in volts.
            </param>
            <param name="thermometer">
            Calibrated thermometer data degrees Celsius.
            </param>
        </member>
        <member name="M:xIMU_API.CalBattThermData.ConvertToCSV">
            <summary>
            Converts data to string of Comma Separated Variables.
            </summary>
        </member>
        <member name="P:xIMU_API.CalBattThermData.BatteryVoltage">
            <summary>
            Gets or sets the calibrated battery voltage data in volts.
            </summary>
        </member>
        <member name="P:xIMU_API.CalBattThermData.Thermometer">
            <summary>
            Gets or sets the calibrated thermometer data degrees Celsius.
            </summary>
        </member>
        <member name="T:xIMU_API.AsyncReadProgressChangedEventArgs">
            <summary>
            Asynchronous read process changed event arguments class.
            </summary>
        </member>
        <member name="M:xIMU_API.AsyncReadProgressChangedEventArgs.#ctor(System.Int32,System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.AsyncReadProgressChangedEventArgs"/> class.
            </summary>
            <param name="progressPercentage">
            Progress percentage.
            </param>
            <param name="progressMessage">
            Progress message.
            </param>
        </member>
        <member name="P:xIMU_API.AsyncReadProgressChangedEventArgs.ProgressPercentage">
            <summary>
            Gets the progress percentage.
            </summary>
        </member>
        <member name="P:xIMU_API.AsyncReadProgressChangedEventArgs.ProgressMessage">
            <summary>
            Gets the progress message.
            </summary>
        </member>
        <member name="T:xIMU_API.CommandData">
            <summary>
            Command data class.
            </summary>
        </member>
        <member name="M:xIMU_API.CommandData.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.CommandData"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.CommandData.#ctor(xIMU_API.CommandCodes)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.CommandData"/> class.
            </summary>
            <param name="commandCode">
            Command code. See <see cref="T:xIMU_API.CommandCodes"/>.
            </param>
        </member>
        <member name="M:xIMU_API.CommandData.#ctor(System.UInt16)">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.CommandData"/> class.
            </summary>
            <param name="commandCode">
            Command code. Must be defined in <see cref="T:xIMU_API.CommandCodes"/>.
            </param>
        </member>
        <member name="M:xIMU_API.CommandData.GetMessage">
            <summary>
            Gets message associated with command code.
            </summary>
        </member>
        <member name="P:xIMU_API.CommandData.CommandCode">
            <summary>
            Gets or sets the command code.  Must be defined in <see cref="T:xIMU_API.CommandCodes"/>.
            </summary>
            <exception cref="T:System.Exception">
            Thrown if invalid command code specifed.
            </exception>
        </member>
        <member name="T:xIMU_API.RawInertialMagData">
            <summary>
            Raw gyroscope, accelerometer and magnetometer data class.
            </summary>
        </member>
        <member name="M:xIMU_API.RawInertialMagData.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.RawInertialMagData"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.RawInertialMagData.#ctor(System.Int16[],System.Int16[],System.Int16[])">
            <summary>
            Initialises a new instance of the <see cref="T:xIMU_API.RawInertialMagData"/> class.
            </summary>
            <param name="gyroscope">
            Raw gyroscope ADC data in LSBs.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </param>
            <param name="accelerometer">
            Raw accelerometer ADC data in LSBs.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </param>  
            <param name="magnetometer">
            Raw magnetometer ADC data in LSBs.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </param>  
        </member>
        <member name="M:xIMU_API.RawInertialMagData.ConvertToCSV">
            <summary>
            Converts data to string of Comma Separated Variables.
            </summary>
        </member>
        <member name="P:xIMU_API.RawInertialMagData.Gyroscope">
            <summary>
            Gets or sets the raw gyroscope ADC data in LSBs.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </summary>
        </member>
        <member name="P:xIMU_API.RawInertialMagData.Accelerometer">
            <summary>
            Gets or sets the raw accelerometer ADC data in LSBs.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </summary>
        </member>
        <member name="P:xIMU_API.RawInertialMagData.Magnetometer">
            <summary>
            Gets or sets the raw magnetometer ADC data in LSBs.  Elements 0, 1 and 2 represent the sensor x, y and z axes respectively.
            </summary>
        </member>
        <member name="T:xIMU_API.PacketCount">
            <summary>
            Packet count class tracks number of packets read and written.
            </summary>
        </member>
        <member name="M:xIMU_API.PacketCount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:xIMU_API.PacketCount"/> class.
            </summary>
        </member>
        <member name="M:xIMU_API.PacketCount.#ctor(xIMU_API.PacketCount)">
            <summary>
            Initializes a new instance of the <see cref="T:xIMU_API.PacketCount"/> class.
            </summary>
            <param name="packetCount">
            Existing instance of <see cref="T:xIMU_API.PacketCount"/> to copy.
            </param>
        </member>
        <member name="M:xIMU_API.PacketCount.Reset">
            <summary>
            Resets all packet counts to zero.
            </summary>
        </member>
        <member name="M:xIMU_API.PacketCount.Difference(xIMU_API.PacketCount)">
            <summary>
            Returns the difference between the current and previous packet count.
            </summary>
            <param name="previousPacketCount">
            Previous packet count.
            </param>
            <returns>
            Difference between the current and previous packet count.
            </returns>
        </member>
        <member name="P:xIMU_API.PacketCount.PacketsReadErrors">
            <summary>
            Gets or sets the number of packet read errors.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.TotalPacketsRead">
            <summary>
            Gets or sets the total number of packets read.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.ErrorPacketsRead">
            <summary>
            Gets or sets the number of error data packets read.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.CommandPacketsRead">
            <summary>
            Gets or sets the number of command data packets read.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.RegisterDataPacketsRead">
            <summary>
            Gets or sets the number of register data packets read.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.DateTimeDataPacketsRead">
            <summary>
            Gets or sets the number of date/time data packets read.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.RawBattThermDataPacketsRead">
            <summary>
            Gets or sets the number of raw battery and thermometer data packets read.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.CalBattThermDataPacketsRead">
            <summary>
            Gets or sets the number of calibration battery and thermometer data packets read.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.RawInertialMagDataPacketsRead">
            <summary>
            Gets or sets the number of raw inertial/magnetic data packets read.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.CalInertialMagDataPacketsRead">
            <summary>
            Gets or sets the number of calibrated inertial/magnetic data packets read.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.QuaternionDataPacketsRead">
            <summary>
            Gets or sets the number of quaternion packets read.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.DigitalIODataPacketsRead">
            <summary>
            Gets or sets the number of digital I/O data packets read.
            </summary>
        </member>
        <member name="P:xIMU_API.PacketCount.TotalPacketsWritten">
            <summary>
            Gets or sets the total number of packets written.
            </summary>  
        </member>
        <member name="P:xIMU_API.PacketCount.CommandPacketsWritten">
            <summary>
            Gets or sets the number of command packets written.
            </summary>  
        </member>
        <member name="P:xIMU_API.PacketCount.ReadRegisterPacketsWritten">
            <summary>
            Gets or sets the number of read register packets written.
            </summary>  
        </member>
        <member name="P:xIMU_API.PacketCount.WriteRegisterPacketsWritten">
            <summary>
            Gets or sets the number of write register packets written.
            </summary>  
        </member>
        <member name="P:xIMU_API.PacketCount.ReadDateTimePacketsWritten">
            <summary>
            Gets or sets the number of read date/time packets written.
            </summary>  
        </member>
        <member name="P:xIMU_API.PacketCount.WriteDateTimePacketsWritten">
            <summary>
            Gets or sets the number of write date/time packets written.
            </summary>  
        </member>
        <member name="P:xIMU_API.PacketCount.DigitalIODataPacketsWritten">
            <summary>
            Gets or sets the number of digital I/O data packets written.
            </summary>
        </member>
    </members>
</doc>
